#!/usr/bin/env perl
# Copyright (c) 2009, Maximilian GaÃŸ <mxey@ghosthacking.net>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use AnyEvent::Handle;
use AnyEvent::IRC::Client;
use AnyEvent::Socket;

my $CHANNEL = '#skyshaper';
my $irc = new AnyEvent::IRC::Client;

sub announce {
	my($host, $handle, $line) = @_;
	$irc->send_chan($CHANNEL, 'PRIVMSG', $CHANNEL, $line);
	$handle->push_read(line => sub {
		announce($host, @_);
	});
}

tcp_server('10.56.0.1', 6666, sub {
	my($fh, $host, $port) = @_;
	if (!$fh) {
		warn "Server failure: $!";
		return;
	}
	my $handle;
	$handle = new AnyEvent::Handle(
		fh => $fh,
		on_eof => sub { undef $handle },
	);
	$handle->push_read(line => sub {
		announce($host, @_);
	});
});

$irc->reg_cb(
	connect => sub {
		my($irc, $err) = @_;
		if ($err) {
			die "Connecting to IRC failed: $err";
		}
	},
	registered => sub {
		$irc->enable_ping(2);
	},
	disconnect => sub {
		my($irc, $reason) = @_;
		print "Disconnect: $reason\n";
		exit;
	},
);

$irc->send_srv('JOIN', $CHANNEL);
$irc->enable_ssl;
$irc->connect('irc.oftc.net', 6697, {
	nick => 'happyman',
	user => 'happyman',
	real => 'Happy Man - Skyshaper Announcement Bot',
});

AnyEvent->condvar->wait;
